<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.example.directory</groupId>
    <artifactId>directory</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <artifactId>directory-webapp</artifactId>
  <packaging>war</packaging>
  <name>Example Application - Webapp</name>
  <dependencies>
    <!-- 
    <dependency>
      <groupId>com.example.directory</groupId>
      <artifactId>directory-startup-wings</artifactId>
    </dependency>
     -->
    <dependency>
      <groupId>com.example.directory</groupId>
      <artifactId>directory-startup-remote</artifactId>
    </dependency>
    <dependency>
      <groupId>com.example.directory</groupId>
      <artifactId>directory-startup-flex-config</artifactId>
      <classifier>resources</classifier>
      <type>zip</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.example.directory</groupId>
      <artifactId>directory-startup-flex-client</artifactId>
      <type>swf</type>
      <scope>provided</scope>
    </dependency>
    <!--
    <dependency>
      <groupId>com.example.directory</groupId>
      <artifactId>directory-startup-qooxdoo-server</artifactId>
    </dependency>
    <dependency>
      <groupId>com.example.directory</groupId>
      <artifactId>directory-startup-qooxdoo-client</artifactId>
      <classifier>web-resources</classifier>
      <type>zip</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jspresso.framework</groupId>
      <artifactId>jspresso-qooxdoo-server</artifactId>
    </dependency>
    -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-ehcache</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
    </dependency>
    <dependency>
      <groupId>com.adobe.blazeds</groupId>
      <artifactId>blazeds-common</artifactId>
    </dependency>
    <dependency>
      <groupId>com.adobe.blazeds</groupId>
      <artifactId>blazeds-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.adobe.blazeds</groupId>
      <artifactId>blazeds-remoting</artifactId>
    </dependency>
    <dependency>
      <groupId>com.adobe.blazeds</groupId>
      <artifactId>blazeds-proxy</artifactId>
    </dependency>
    <dependency>
      <groupId>com.adobe.blazeds</groupId>
      <artifactId>blazeds-opt</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jvnet.substance</groupId>
      <artifactId>substance</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-flex-config</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.artifactId}/WEB-INF/flex</outputDirectory>
              <includeArtifactIds>directory-startup-flex-config</includeArtifactIds>
              <includeClassifiers>resources</includeClassifiers>
              <excludeTransitive>true</excludeTransitive>
            </configuration>
          </execution>
          <!--
          <execution>
            <id>unpack-qooxdoo-dependencies</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.artifactId}/qooxdoo</outputDirectory>
              <includeArtifactIds>directory-startup-qooxdoo-client</includeArtifactIds>
              <includeClassifiers>web-resources</includeClassifiers>
              <excludeTransitive>true</excludeTransitive>
            </configuration>
          </execution>
          -->
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warName>${project.artifactId}</warName>
          <webappDirectory>${project.build.directory}/${project.artifactId}</webappDirectory>
          <webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
          <warSourceExcludes>**/webstart/**,**/*-web.xml</warSourceExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.flexmojos</groupId>
        <artifactId>flexmojos-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>wrapper</goal>
              <goal>copy-flex-resources</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <wrapperArtifact>
                <groupId>${project.groupId}</groupId>
                <artifactId>directory-startup-flex-client</artifactId>
              </wrapperArtifact>
              <templateInclusions>
                <String>**/flex/*.html</String>
              </templateInclusions>
              <templateExclusions>
                <String>**/flex/*.js</String>
              </templateExclusions>
              
              <stripVersion>true</stripVersion>
              <webappDirectory>${project.build.directory}/${project.artifactId}/flex</webappDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>build-eclipse-WEB-INF-lib-directory</id>
            <phase>package</phase>
            <configuration>
              <tasks>
                <copy
                  todir="target/eclipse-war-lib">
                  <fileset
                    dir="target/directory-webapp/WEB-INF/lib">
                    <exclude
                      name="**/directory-*.*" />
                  </fileset>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <configuration>
          <webApp>${project.build.directory}/${project.artifactId}</webApp>
          <systemProperties>
            <systemProperty>
              <name>java.security.auth.login.config</name>
              <value>../conf/jaas.config</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <!--
    <profile>
      <id>ulc</id>
      <dependencies>
        <dependency>
          <groupId>com.example.directory</groupId>
          <artifactId>directory-startup-ulc</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jspresso.framework</groupId>
          <artifactId>jspresso-ulc-components-client</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>ulc</groupId>
          <artifactId>ulc-deployment-key</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jvnet.substance</groupId>
          <artifactId>substance</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <warName>${project.artifactId}</warName>
              <webappDirectory>${project.build.directory}/${project.artifactId}</webappDirectory>
              <webXml>${basedir}/src/main/webapp/WEB-INF/ulc-web.xml</webXml>
              <warSourceExcludes>**/*-web.xml</warSourceExcludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-dependencies</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/${project.artifactId}/lib</outputDirectory>
                  <includeArtifactIds>ulc-base-trusted,ulc-base-client,ulc-jnlp-client,ulc-servlet-client,nachocalendar,jedit-syntax,jspresso-util,jspresso-ulc-components-shared,jspresso-ulc-components-client,jspresso-swing-components,jspresso-app-launch-core,jspresso-app-launch-ulc,joda-time,substance</includeArtifactIds>
                  <stripVersion>true</stripVersion>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-dependencies</id>
                <phase>prepare-package</phase>
                <configuration>
                  <tasks>
                    <signjar alias="key-alias" keystore="conf/keystore.jks" storepass="keystore-password" keypass="key-password">
                      <fileset dir="${project.build.directory}/${project.artifactId}">
                        <include name="lib/*.jar" />
                      </fileset>
                    </signjar>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    -->
  </profiles>
</project>
